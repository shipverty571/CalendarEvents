<UserControl
    x:Class="View.Controls.EventsManagementControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:View.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:View.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    Background="#FAFAFA"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/TextStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/CustomButtonStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/CustomTextBoxStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="{StaticResource WindowMargin}">
        <DockPanel>
            <StackPanel DockPanel.Dock="Top">
                <TextBlock
                    Margin="{StaticResource ControlsMargin}"
                    Style="{StaticResource RegularBlackTextStyle}"
                    Text="Title: "/>
                <TextBox
                    Style="{StaticResource CustomTextBoxStyle}"
                    Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"/>
                <TextBlock
                    Margin="{StaticResource ControlsMargin}"
                    Style="{StaticResource RegularBlackTextStyle}"
                    Text="Color: "/>
                <ListBox
                    Background="{StaticResource BaseBackgroundColorBrush}"
                    BorderThickness="0"
                    ItemsSource="{Binding Colors}"
                    SelectedItem="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="7" Rows="1"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Rectangle
                                    x:Name="Rectangle"
                                    Width="40"
                                    Height="40"
                                    Margin="0"
                                    Fill="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Converter={StaticResource ColorToBrushConverter}}"
                                    RadiusX="20"
                                    RadiusY="20"
                                    SnapsToDevicePixels="True">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Stroke" Value="{StaticResource BlackColorBrush}"/>
                                            <Setter Property="StrokeThickness" Value="0.5"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="StrokeThickness" Value="1"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </StackPanel>
            <StackPanel
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                DockPanel.Dock="Bottom"
                Orientation="Horizontal">
                <Button
                    Margin="{StaticResource ControlsMargin}"
                    Command="{Binding CloseCommand}"
                    Content="Cancel"
                    Style="{StaticResource CustomButtonStyle}"/>
                <Button
                    Margin="{StaticResource ControlsMargin}"
                    Command="{Binding AddEventCommand}"
                    Content="OK"
                    IsEnabled="{Binding HasErrors, Converter={StaticResource InverseBoolConverter}}"
                    Style="{StaticResource CustomButtonStyle}"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>
